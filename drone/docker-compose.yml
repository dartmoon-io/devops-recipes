version: "3.3"

services:
  drone:
    image: drone/drone:2
    environment:
      - DRONE_SERVER_HOST=${TRAEFIK_HOST}
      - DRONE_SERVER_PROTO=https
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_USER_CREATE=${DRONE_USER_CREATE}
      - DRONE_USER_FILTER=${TRAEFIK_HOST}
      - DRONE_TLS_AUTOCERT=false
    volumes:
      - "/var/docker/drone:/data"
    labels:
      - "traefik.http.routers.drone.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.routers.drone.entrypoints=web"
      - "traefik.http.routers.drone.middlewares=https-redirect"
      - "traefik.http.routers.drone-secure.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.routers.drone-secure.entrypoints=websecure"
      - "traefik.http.routers.drone-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.drone-secure.loadbalancer.server.port=80"
      - "traefik.http.services.drone-secure.loadbalancer.server.scheme=http"
    restart: always
    networks:
      - traefik

  drone-runner:
    image: drone/drone-runner-docker:1
    environment:
      - DRONE_RPC_PROTO=https
      - DRONE_RPC_HOST=${TRAEFIK_HOST}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=1
      - DRONE_RUNNER_NAME=${DRONE_RUNNER_NAME}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always
      
networks:
  traefik:
    external: true